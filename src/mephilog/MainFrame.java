/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mephilog;

import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vlad
 */
public class MainFrame extends javax.swing.JFrame {

    private String[] wheres = {"", "", ""};
    private boolean evtEnabled;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        evtEnabled = false;
        initComponents();
        this.UpdateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StudentFilter = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        GroupFilter = new javax.swing.JComboBox<>();
        LessonFilter = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        ScoreTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MephiLog 1.0");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(790, 530));

        StudentFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все", " " }));
        StudentFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentFilterActionPerformed(evt);
            }
        });

        jLabel1.setText("Студент");

        jLabel2.setText("Группа");

        jLabel3.setText("Предмет");

        GroupFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все" }));
        GroupFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupFilterActionPerformed(evt);
            }
        });

        LessonFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все" }));
        LessonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LessonFilterActionPerformed(evt);
            }
        });

        ScoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ФИО", "Группа", "Предмет", "Количество баллов", "Дата", "ИД"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScoreTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(ScoreTable);

        jButton1.setText("Группы");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Предметы");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Студенты");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setText("Сбросить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Добавить оценку");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Удалить оценку");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StudentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GroupFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LessonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GroupFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LessonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LessonsEditor().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new StudentsEditor().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        StudentFilter.setSelectedIndex(0);
        GroupFilter.setSelectedIndex(0);
        LessonFilter.setSelectedIndex(0);
        this.UpdateTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void StudentFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentFilterActionPerformed
        // TODO add your handling code here:
        if (evtEnabled == true) {
            if (StudentFilter.getSelectedIndex() > 0) {
                this.wheres[0] = "students.name='" + StudentFilter.getSelectedItem().toString() + "'";
                this.UpdateTable();
            } else if (StudentFilter.getSelectedIndex() == 0) {
                this.wheres[0] = "";
                this.UpdateTable();
            }
        }
    }//GEN-LAST:event_StudentFilterActionPerformed

    private void GroupFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupFilterActionPerformed
        // TODO add your handling code here:
        if (evtEnabled == true) {
            if (GroupFilter.getSelectedIndex() > 0) {
                this.wheres[1] = "groups.name ='" + GroupFilter.getSelectedItem().toString() + "'";
                this.UpdateTable();
            } else if (GroupFilter.getSelectedIndex() == 0) {
                this.wheres[1] = "";
                this.UpdateTable();
            }
        }
    }//GEN-LAST:event_GroupFilterActionPerformed

    private void LessonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LessonFilterActionPerformed
        // TODO add your handling code here:
        if (evtEnabled == true) {
            if (LessonFilter.getSelectedIndex() > 0) {
                this.wheres[2] = "lessons.name ='" + LessonFilter.getSelectedItem().toString() + "'";
                this.UpdateTable();
            } else if (LessonFilter.getSelectedIndex() == 0) {
                this.wheres[2] = "";
                this.UpdateTable();
            }
        }
    }//GEN-LAST:event_LessonFilterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new GroupsEditor().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setEnabled(false);
        new Adder().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int row = ScoreTable.getSelectedRow();
        if (row != -1) {
            String id = ScoreTable.getValueAt(row, 5).toString();
            String queryStr = "DELETE FROM scores WHERE id = " + id;
            int rs = MephiLog.db.updateQuery(queryStr);
            if (rs > 0) {
                this.UpdateTable();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public void UpdateTable() {
        evtEnabled = false;
        ((DefaultTableModel) ScoreTable.getModel()).setRowCount(0);
        String[] newRow = new String[6];

        if (this.StudentFilter.getSelectedIndex() <= 0) {
            this.StudentFilter.removeAllItems();
            this.StudentFilter.addItem("Все");
        }
        if (this.GroupFilter.getSelectedIndex() <= 0) {
            this.GroupFilter.removeAllItems();
            this.GroupFilter.addItem("Все");
        }
        if (this.LessonFilter.getSelectedIndex() <= 0) {
            this.LessonFilter.removeAllItems();
            this.LessonFilter.addItem("Все");
        }
        ArrayList<String> wheresAL = new ArrayList<>();
        for (String whereStr : this.wheres) {
            if (!whereStr.isEmpty()) {
                wheresAL.add(whereStr);
            }
        }
        String wheresStr = String.join(" AND ", wheresAL);

        String queryStr = "SELECT students.name,groups.name,lessons.name,score,date, scores.id FROM mephi.scores "
                + "join students on (students.id = student_id) "
                + "join lessons on (lessons.id = lesson_id) "
                + "join groups on (groups.id = group_id) ";

        if (!wheresStr.isEmpty()) {
            queryStr = queryStr + "WHERE " + wheresStr;
        }
        ResultSet rs = MephiLog.db.query(queryStr);

        try {
            while (rs.next()) {
                newRow[0] = rs.getString("students.name");

                if (((DefaultComboBoxModel) this.StudentFilter.getModel()).getIndexOf(newRow[0]) == -1) {
                    this.StudentFilter.addItem(newRow[0]);
                }
                newRow[1] = rs.getString("groups.name");

                if (((DefaultComboBoxModel) this.GroupFilter.getModel()).getIndexOf(newRow[1]) == -1) {
                    this.GroupFilter.addItem(newRow[1]);
                }
                newRow[2] = rs.getString("lessons.name");

                if (((DefaultComboBoxModel) this.LessonFilter.getModel()).getIndexOf(newRow[2]) == -1) {
                    this.LessonFilter.addItem(newRow[2]);
                }
                newRow[3] = rs.getString("score");
                newRow[4] = rs.getString("date");
                newRow[5] = rs.getString("id");
                this.addRow(newRow);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        evtEnabled = true;
    }

    private void addRow(String[] data) {
        DefaultTableModel model = (DefaultTableModel) ScoreTable.getModel();
        model.addRow(new Object[]{data[0], data[1], data[2], data[3], data[4], data[5]
        });
    }

    public void setItEnabled(boolean en) {
        this.setEnabled(en);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> GroupFilter;
    private javax.swing.JComboBox<String> LessonFilter;
    private javax.swing.JTable ScoreTable;
    private javax.swing.JComboBox<String> StudentFilter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
